<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mapper.UserMapper">
	
<!-- 	/** -->
<!-- 	 * 根据user对象中的lastName和sex属性查询用户 -->
<!-- 	 *  -->
<!-- 	 * @param user -->
<!-- 	 * @return -->
<!-- 	 */ -->
<!-- 	public List<User> queryUsersByNameAndSex(User user); -->
	<select id="queryUsersByNameAndSex" resultType="com.atguigu.pojo.User">
		select 
			id,last_name lastName,sex 
		from 
			t_user
		<!-- where -->
<!--		<where>-->
			<!-- if标签用来判断一个条件是否成立。如果成立就执行里面的内容 -->
<!--			<if test="lastName != null">-->
<!--				last_name like concat('%',#{lastName},'%')-->
<!--			</if>-->
<!--			<if test="sex == 0 || sex == 1">-->
<!--				and sex = #{sex}-->
<!--			</if>-->
<!--		</where>-->
		<!-- where标签可以动态的去掉包含的内容前面的关键字and 和 or
				where 标签还会在包含的内容有的情况，添加一个where关键字
		 -->
		<trim suffixOverrides="and" prefix="where">
			<!-- if标签用来判断一个条件是否成立。如果成立 就执行里面的内容 -->
			<if test="lastName != null">
				last_name like concat('%',#{lastName},'%')  and
			</if>
			<if test="sex == 0 || sex == 1">
				sex = #{sex}
			</if>
		</trim>

	</select>
	
	
	
	
<!-- 	/** -->
<!-- 	 * 如果lastName有值，则使用它查询<br/> -->
<!-- 	 * 如果lastName没有值，sex值有效，则使用sex查询<br/> -->
<!-- 	 * 否则，你自己添加一个查询条件（默认） -->
<!-- 	 */ -->
<!-- 	public List<User> queryUsersByNameAndSexChoose(User user); -->
	<select id="queryUsersByNameAndSexChoose" resultType="com.atguigu.pojo.User">
		select 
			id,last_name lastName,sex 
		from 
			t_user 
		<where>
			<choose>
				<when test="lastName != null">
					last_name like concat('%',#{lastName},'%')
				</when>
				<when test="sex == 0 || sex == 1">
					sex = #{sex}
				</when>
				<otherwise>
					last_name = 'wzg168'
				</otherwise>
			</choose>
		</where> 
	</select>
	
	
	
<!-- 	public int updateUser(User user); -->
	<update id="updateUser" parameterType="com.atguigu.pojo.User">
		update 
			t_user 
		<set>
			<if test="lastName != null">
				last_name = #{lastName},
			</if>
			<if test="sex == 0 || sex == 1">
				sex = #{sex}
			</if>
		</set>
		where 
			id = #{id}
	</update>
	
	
<!-- 		/** -->
<!-- 	 * 执行类似的语句：select * from t_user where id in (1,3,4); -->
<!-- 	 */ -->
<!-- 	public List<User> queryUsersByIds(List<Integer> ids); -->
	<select id="queryUsersByIds" resultType="com.atguigu.pojo.User">
		select 
			id,last_name lastName,sex 
		from 
			t_user 
		<where>
			id in 
			<!-- 
				foreach 遍历输出
					collection你要遍历的数据源
					items 表示当前遍历的数据
					open 表示遍历之前添加的内容 
					close 表示遍历之后添加的内容
					separator 给遍历的每个元素中间添加的内容
			 -->
			<foreach collection="list" item="i" open="(" close=")" separator=",">
				#{i}
			</foreach>
		</where>
	</select>
	
	
	
	
</mapper>